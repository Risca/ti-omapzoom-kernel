/*
 * Copyright (C) 2013 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "dra7.dtsi"
#include <dt-bindings/pinctrl/dra7xx.h>
#include <dt-bindings/clk/ti-dra7-atl.h>

/ {
	model = "TI DRA7";
	compatible = "ti,dra7-evm", "ti,dra752", "ti,dra7";

	memory {
		device_type = "memory";
		reg = <0x80000000 0x60000000>; /* 1536 MB */
	};

	extcon1: gpio_usbvid_extcon1 {
		compatible = "ti,gpio-usb-id";
		gpios = <&gpio21 1 0>;
	};

	extcon2: gpio_usbvid_extcon2 {
		compatible = "ti,gpio-usb-id";
		gpios = <&gpio21 2 0>;
	};

	evm_3v3_sd: fixedregulator-sd {
		compatible = "regulator-fixed";
		regulator-name = "evm_3v3_sd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
		gpio = <&gpio21 5 0>;
	};

	evm_3v3_sw: fixedregulator-evm_3v3_sw {
		compatible = "regulator-fixed";
		regulator-name = "evm_3v3_sw";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	aic_dvdd_1v8: fixedregulator-aic-dvdd-1v8 {
		compatible = "regulator-fixed";
		regulator-name = "aic-dvdd-1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
	};

	sound {
		compatible = "ti,dra7xx-evm-audio";
		ti,model = "DRA7xx-EVM";
		ti,always-on;
		ti,audio-codec = <&tlv320aic3106>;
		ti,mcasp-controller = <&mcasp3>;
		ti,codec-clock-rate = <5644800>;
		clocks = <&atl_clkin2_ck>;
		clock-names = "ti,codec-clock";
		ti,audio-routing =
			"Headphone Jack",       "HPLOUT",
			"Headphone Jack",       "HPROUT",
			"LINE1L",               "Line In",
			"LINE1R",               "Line In",
			"MIC3L",		"Mic Bias 2V",
			"MIC3R",		"Mic Bias 2V",
			"Mic Bias 2V",		"Main Mic",
			"Line Out",		"LLOUT",
			"Line Out",		"RLOUT";
	};

	radio {
		compatible = "ti,dra7xx_radio";
		gpios = <&gpio6 20 0>;

		radio_helper1 {
			compatible = "ti,dra7xx_radio_subdev";
			ti,hwmods = "mcasp2";
			status = "okay";
		};

		radio_helper2 {
			compatible = "ti,dra7xx_radio_subdev";
			ti,hwmods = "mcasp6";
			status = "okay";
			clocks = <&mcasp6_ahclkx_mux>;
			clock-names = "fck";
			clock-frequency = <11289600>;
			fck_parent = "atl_clkin1_ck";
		};
	};

       vmmcwl_fixed: fixedregulator-mmcwl {
               compatible = "regulator-fixed";
               regulator-name = "vmmcwl_fixed";
               regulator-min-microvolt = <1800000>;
               regulator-max-microvolt = <1800000>;
               gpio = <&gpio5 8 0>;    /* gpio5_8 */
               startup-delay-us = <70000>;
               enable-active-high;
       };

       wlcore {
               compatible = "wlcore";
               gpio = <135>;
       };


	ocp {
		gpu: gpu@0x56000000 {
			gpu-supply = <&abb_gpu>;
		};
	};

       kim {
               compatible = "kim";
               nshutdown_gpio = <132>;
               dev_name = "/dev/ttyO2";
               flow_cntrl = <1>;
               baud_rate = <3686400>;
       };

       btwilink {
               compatible = "btwilink";
       };
};

&dra7_pmx_core {
	pinctrl-names = "default";
	pinctrl-0 = <
		&vout1_pins
		&irq_pins
		&atl_pins
		&mcasp6_pins
		&hpd_pin
		&radio_pins
		&wl_pins
		&wlirq_pins
	>;

	atl_pins: pinmux_atl_pins {
		pinctrl-single,pins = <
			0x298 0x00000005	/* xref_clk1.atl_clk1 OUTPUT | MODE5 */
			0x29c 0x00000005	/* xref_clk2.atl_clk2 OUTPUT | MODE5 */
		>;
	};

	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			0x400 0x60000	/* i2c1_sda */
			0x404 0x60000	/* i2c1_scl */
		>;
	};

	i2c2_pins: pinmux_i2c2_pins {
		pinctrl-single,pins = <
			0x408 0x60000	/* i2c2_sda */
			0x40c 0x60000	/* i2c2_scl */
		>;
	};

	i2c3_pins: pinmux_i2c3_pins {
		pinctrl-single,pins = <
			0x410 0x60000	/* i2c3_sda */
			0x414 0x60000	/* i2c3_scl */
		>;
	};

	i2c4_pins: pinmux_i2c4_pins {
		pinctrl-single,pins = <
			0x0334	 0x70004 /* I2C4_SDA: Mode5.Input.PD */
			0x0338	 0x70004 /* I2C4_SCL: Mode5.Input.PD */
		>;
	};

	irq_pins: pinmux_irq_pins {
		pinctrl-single,pins = <
			0x420	0x1	/* Wakeup2 INPUT | MODE1 */
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x36c 0x4000e	/* mmc1sdcd.gpio INPUT | MODE15 */
		>;
	};

	mmc1_muxpu: pinmux_mmc1_muxpu {
		pinctrl-single,pins = <
			0x354 0x60000	/* mmc1_clk.clk INPUT PULLUP | MODE0 */
			0x358 0x60000	/* mmc1_cmd.cmd INPUT PULLUP | MODE0 */
			0x35c 0x60000	/* mmc1_dat0.dat0 INPUT PULLUP | MODE0 */
			0x360 0x60000	/* mmc1_dat1.dat1 INPUT PULLUP | MODE0 */
			0x364 0x60000	/* mmc1_dat2.dat2 INPUT PULLUP | MODE0 */
			0x368 0x60000	/* mmc1_dat3.dat3 INPUT PULLUP | MODE0 */
		>;
	};

	mmc1_muxpd: pinmux_mmc1_muxpd {
		pinctrl-single,pins = <
			0x354 0x20000	/* mmc1_clk.clk INPUT PULLUP | MODE0 */
			0x358 0x20000	/* mmc1_cmd.cmd INPUT PULLUP | MODE0 */
			0x35c 0x20000	/* mmc1_dat0.dat0 INPUT PULLUP | MODE0 */
			0x360 0x20000	/* mmc1_dat1.dat1 INPUT PULLUP | MODE0 */
			0x364 0x20000	/* mmc1_dat2.dat2 INPUT PULLUP | MODE0 */
			0x368 0x20000	/* mmc1_dat3.dat3 INPUT PULLUP | MODE0 */
		>;
	};

	mcspi1_pins: pinmux_mcspi1_pins {
		pinctrl-single,pins = <
			0x3a4 0x40000	/* spi2_clk */
			0x3a8 0x40000	/* spi2_d1 */
			0x3ac 0x40000	/* spi2_d0 */
			0x3b0 0xc0000	/* spi2_cs0 */
			0x3b4 0xc0000	/* spi2_cs1 */
			0x3bc 0xe0006	/* spi2_cs3 */
		>;
	};

	mcspi2_pins: pinmux_mcspi2_pins {
		pinctrl-single,pins = <
			0x3c0 0x40000	/* spi2_sclk */
			0x3c4 0xc0000	/* spi2_d1 */
			0x3c8 0xc0000	/* spi2_d1 */
			0x3cc 0xe0000	/* spi2_cs0 */
		>;
	};

	uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
			0x3e0 0xe0000	/* uart1_rxd */
			0x3e4 0xe0000	/* uart1_txd */
		>;
	};

	bt_uart3_pins: pinmux_bt_uart3_pins {
		pinctrl-single,pins = <
                        0x3c0 0x60001       /* uart3_rx.spi2_sclk:  INPUT | PULLUP | MODE 1 */
                        0x3c4 0x1           /* uart3_tx.spi2.d1:    OUTPUT |  MODE 1 */
                        0x3c8 0x40001       /* uart3_rts.spi2.c0:   OUTPUT | PULLUP | MODE 1 */
                        0x3cc 0x60001       /* uart3_cts.spi2.d0:   INPUT | MODE 1 */
                        0x2bc 0xE           /* BT_EN.gp5_4:         OUTPUT | MODE 14 */
		>;
	};

	qspi1_pins: pinmux_qspi1_pins {
		pinctrl-single,pins = <
			0x4c 0x40001  /* gpmc_a3.qspi1_cs2 */
			0x50 0x40001  /* gpmc_a4.qspi1_cs3 */
			0x74 0x40001  /* gpmc_a13.qspi1_rtclk */
			0x78 0x40001  /* gpmc_a14.qspi1_d3 */
			0x7c 0x40001  /* gpmc_a15.qspi1_d2 */
			0x80 0x40001  /* gpmc_a16.qspi1_d1 */
			0x84 0x40001  /* gpmc_a17.qspi1_d0 */
			0x88 0x40001  /* qpmc_a18.qspi1_sclk */
			0xb8 0x60001  /* gpmc_cs2.qspi1_cs0 */
			0xbc 0x60001  /* gpmc_cs3.qspi1_cs1 */
		>;
	};

	usb1_pins: pinmux_usb1_pins {
                pinctrl-single,pins = <
			0x280	0xc000e	/* usb1_drvvbus, SLOW_SLEW | PULLUPEN | MODE0 */
                >;
        };

	usb2_pins: pinmux_usb2_pins {
                pinctrl-single,pins = <
			0x284	0xc000e /* usb2_drvvbus, SLOW_SLEW | PULLUPEN | MODE0 */
                >;
        };

	vout1_pins: pinmux_vout1_pins {
		pinctrl-single,pins = <
			0x1C8	0x0	/* vout1_clk OUTPUT | MODE0 */
			0x1CC	0x0	/* vout1_de OUTPUT | MODE0 */
			0x1D0	0x0	/* vout1_fld OUTPUT | MODE0 */
			0x1D4	0x0	/* vout1_hsync OUTPUT | MODE0 */
			0x1D8	0x0	/* vout1_vsync OUTPUT | MODE0 */
			0x1DC	0x0	/* vout1_d0 OUTPUT | MODE0 */
			0x1E0	0x0	/* vout1_d1 OUTPUT | MODE0 */
			0x1E4	0x0	/* vout1_d2 OUTPUT | MODE0 */
			0x1E8	0x0	/* vout1_d3 OUTPUT | MODE0 */
			0x1EC	0x0	/* vout1_d4 OUTPUT | MODE0 */
			0x1F0	0x0	/* vout1_d5 OUTPUT | MODE0 */
			0x1F4	0x0	/* vout1_d6 OUTPUT | MODE0 */
			0x1F8	0x0	/* vout1_d7 OUTPUT | MODE0 */
			0x1FC	0x0	/* vout1_d8 OUTPUT | MODE0 */
			0x200	0x0	/* vout1_d9 OUTPUT | MODE0 */
			0x204	0x0	/* vout1_d10 OUTPUT | MODE0 */
			0x208	0x0	/* vout1_d11 OUTPUT | MODE0 */
			0x20C	0x0	/* vout1_d12 OUTPUT | MODE0 */
			0x210	0x0	/* vout1_d13 OUTPUT | MODE0 */
			0x214	0x0	/* vout1_d14 OUTPUT | MODE0 */
			0x218	0x0	/* vout1_d15 OUTPUT | MODE0 */
			0x21C	0x0	/* vout1_d16 OUTPUT | MODE0 */
			0x220	0x0	/* vout1_d17 OUTPUT | MODE0 */
			0x224	0x0	/* vout1_d18 OUTPUT | MODE0 */
			0x228	0x0	/* vout1_d19 OUTPUT | MODE0 */
			0x22C	0x0	/* vout1_d20 OUTPUT | MODE0 */
			0x230	0x0	/* vout1_d21 OUTPUT | MODE0 */
			0x234	0x0	/* vout1_d22 OUTPUT | MODE0 */
			0x238	0x0	/* vout1_d23 OUTPUT | MODE0 */
		>;
	};

	vin1a_pins: pinmux_vin1a_pins {
		pinctrl-single,pins = <
			0x0DC	(PIN_INPUT | MUX_MODE0)	/* vin1a_clk0  */
			0x0E4	(PIN_INPUT | MUX_MODE0)	/* vin1a_de0  */
			0x0E8	(PIN_INPUT | MUX_MODE0)	/* vin1a_fld0  */
			0x0EC	(PIN_INPUT | MUX_MODE0)	/* vin1a_hsync0	 */
			0x0F0	(PIN_INPUT | MUX_MODE0)	/* vin1a_vsync0  */
			0x0F4	(PIN_INPUT | MUX_MODE0)	/* vin1a_d0	 */
			0x0F8	(PIN_INPUT | MUX_MODE0)	/* vin1a_d1	 */
			0x0FC	(PIN_INPUT | MUX_MODE0)	/* vin1a_d2	 */
			0x100	(PIN_INPUT | MUX_MODE0)	/* vin1a_d3 	 */
			0x104	(PIN_INPUT | MUX_MODE0)	/* vin1a_d4 	 */
			0x108	(PIN_INPUT | MUX_MODE0)	/* vin1a_d5	 */
			0x10C	(PIN_INPUT | MUX_MODE0)	/* vin1a_d6	 */
			0x110	(PIN_INPUT | MUX_MODE0)	/* vin1a_d7	 */
			0x114	(PIN_INPUT | MUX_MODE0)	/* vin1a_d8	 */
			0x118	(PIN_INPUT | MUX_MODE0)	/* vin1a_d9	 */
			0x11C	(PIN_INPUT | MUX_MODE0)	/* vin1a_d10	 */
			0x120	(PIN_INPUT | MUX_MODE0)	/* vin1a_d11	 */
			0x124	(PIN_INPUT | MUX_MODE0)	/* vin1a_d12	 */
			0x128	(PIN_INPUT | MUX_MODE0)	/* vin1a_d13	 */
			0x12C	(PIN_INPUT | MUX_MODE0)	/* vin1a_d14	 */
			0x130	(PIN_INPUT | MUX_MODE0)	/* vin1a_d15	 */
		>;
	};

	vin1a_d16_d23_pins: pinmux_vin1a_d16_d23_pins {
		pinctrl-single,pins = <
			0x134   (PIN_INPUT | MUX_MODE0)	/* vin1a_d16  */
			0x138   (PIN_INPUT | MUX_MODE0)	/* vin1a_d17  */
			0x13C   (PIN_INPUT | MUX_MODE0)	/* vin1a_d18  */
			0x140   (PIN_INPUT | MUX_MODE0)	/* vin1a_d19  */
			0x144   (PIN_INPUT | MUX_MODE0)	/* vin1a_d20  */
			0x148   (PIN_INPUT | MUX_MODE0)	/* vin1a_d21  */
			0x14C   (PIN_INPUT | MUX_MODE0)	/* vin1a_d22  */
			0x150   (PIN_INPUT | MUX_MODE0)	/* vin1a_d23  */

		>;
	};

	vin2a_pins: pinmux_vin2a_pins {
		pinctrl-single,pins = <
			0x154	(PIN_INPUT | MUX_MODE0)	/* vin2a_clk0  */
			0x160	(PIN_INPUT | MUX_MODE0)	/* vin2a_hsync0  */
			0x164	(PIN_INPUT | MUX_MODE0)	/* vin2a_vsync0  */
			0x168	(PIN_INPUT | MUX_MODE0)	/* vin2a_d0	 */
			0x16c	(PIN_INPUT | MUX_MODE0)	/* vin2a_d1	 */
			0x170	(PIN_INPUT | MUX_MODE0)	/* vin2a_d2	 */
			0x174	(PIN_INPUT | MUX_MODE0)	/* vin2a_d3	 */
			0x178	(PIN_INPUT | MUX_MODE0)	/* vin2a_d4	 */
			0x17c	(PIN_INPUT | MUX_MODE0)	/* vin2a_d5	 */
			0x180	(PIN_INPUT | MUX_MODE0)	/* vin2a_d6	 */
			0x184	(PIN_INPUT | MUX_MODE0)	/* vin2a_d7	 */
		>;
	};

        vin3a_pins: pinmux_vin3a_pins {
		pinctrl-single,pins = <
			0x0E0	(PIN_INPUT | MUX_MODE6)	/* vin3a_clk0  */
			0x1C0	(PIN_INPUT | MUX_MODE5)	/* vin3a_hsync0  */
			0x1C4	(PIN_INPUT | MUX_MODE5)	/* vin3a_vsync0  */
			0x134	(PIN_INPUT | MUX_MODE6)	/* vin3a_d0	 */
			0x138	(PIN_INPUT | MUX_MODE6)	/* vin3a_d1	 */
			0x13C	(PIN_INPUT | MUX_MODE6)	/* vin3a_d2	 */
			0x140	(PIN_INPUT | MUX_MODE6)	/* vin3a_d3 	 */
			0x144	(PIN_INPUT | MUX_MODE6)	/* vin3a_d4 	 */
			0x148	(PIN_INPUT | MUX_MODE6)	/* vin3a_d5	 */
			0x14C	(PIN_INPUT | MUX_MODE6)	/* vin3a_d6	 */
			0x150	(PIN_INPUT | MUX_MODE6)	/* vin3a_d7	 */
                >;
        };

	vin5a_pins: pinmux_vin5a_pins {
		pinctrl-single,pins = <
			0x374	(PIN_INPUT | MUX_MODE9)	/* vin5a_clk0  */
			0x39c	(PIN_INPUT | MUX_MODE9)	/* vin5a_hsync0  */
			0x3a0	(PIN_INPUT | MUX_MODE9)	/* vin5a_vsync0  */
			0x398	(PIN_INPUT | MUX_MODE9)	/* vin5a_d0	 */
			0x394	(PIN_INPUT | MUX_MODE9)	/* vin5a_d1	 */
			0x390	(PIN_INPUT | MUX_MODE9)	/* vin5a_d2	 */
			0x38c	(PIN_INPUT | MUX_MODE9)	/* vin5a_d3 	 */
			0x388	(PIN_INPUT | MUX_MODE9)	/* vin5a_d4 	 */
			0x384	(PIN_INPUT | MUX_MODE9)	/* vin5a_d5	 */
			0x380	(PIN_INPUT | MUX_MODE9)	/* vin5a_d6	 */
			0x37c	(PIN_INPUT | MUX_MODE9)	/* vin5a_d7	 */
                >;
        };

	vin6a_pins: pinmux_vin6a_pins {
		pinctrl-single,pins = <
			0x298	(PIN_INPUT | MUX_MODE7)	/* vin6a_clk0  */
			0x2B8	(PIN_INPUT | MUX_MODE7)	/* vin6a_hsync0  */
			0x2B4	(PIN_INPUT | MUX_MODE7)	/* vin6a_vsync0  */
			0x330	(PIN_INPUT | MUX_MODE7)	/* vin6a_d0	 */
			0x32C	(PIN_INPUT | MUX_MODE7)	/* vin6a_d1	 */
			0x328	(PIN_INPUT | MUX_MODE7)	/* vin6a_d2	 */
			0x324	(PIN_INPUT | MUX_MODE7)	/* vin6a_d3	 */
			0x310	(PIN_INPUT | MUX_MODE7)	/* vin6a_d4	 */
			0x30C	(PIN_INPUT | MUX_MODE7)	/* vin6a_d5	 */
			0x2F8	(PIN_INPUT | MUX_MODE7)	/* vin6a_d6	 */
			0x2F4	(PIN_INPUT | MUX_MODE7)	/* vin6a_d7	 */
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			0x250 (PIN_OUTPUT | MUX_MODE0)	/* rgmii1_tclk */
			0x254 (PIN_OUTPUT | MUX_MODE0)	/* rgmii1_tctl */
			0x258 (PIN_OUTPUT | MUX_MODE0)	/* rgmii1_td3 */
			0x25c (PIN_OUTPUT | MUX_MODE0)	/* rgmii1_td2 */
			0x260 (PIN_OUTPUT | MUX_MODE0)	/* rgmii1_td1 */
			0x264 (PIN_OUTPUT | MUX_MODE0)	/* rgmii1_td0 */
			0x268 (PIN_INPUT | MUX_MODE0)	/* rgmii1_rclk */
			0x26c (PIN_INPUT | MUX_MODE0)	/* rgmii1_rctl */
			0x270 (PIN_INPUT | MUX_MODE0)	/* rgmii1_rd3 */
			0x274 (PIN_INPUT | MUX_MODE0)	/* rgmii1_rd2 */
			0x278 (PIN_INPUT | MUX_MODE0)	/* rgmii1_rd1 */
			0x27c (PIN_INPUT | MUX_MODE0)	/* rgmii1_rd0 */

			/* Slave 2 */
			0x198 (PIN_OUTPUT | MUX_MODE3)	/* rgmii2_tclk */
			0x19c (PIN_OUTPUT | MUX_MODE3)	/* rgmii2_tctl */
			0x1a0 (PIN_OUTPUT | MUX_MODE3)	/* rgmii2_td3 */
			0x1a4 (PIN_OUTPUT | MUX_MODE3)	/* rgmii2_td2 */
			0x1a8 (PIN_OUTPUT | MUX_MODE3)	/* rgmii2_td1 */
			0x1ac (PIN_OUTPUT | MUX_MODE3)	/* rgmii2_td0 */
			0x1b0 (PIN_INPUT | MUX_MODE3)	/* rgmii2_rclk */
			0x1b4 (PIN_INPUT | MUX_MODE3)	/* rgmii2_rctl */
			0x1b8 (PIN_INPUT | MUX_MODE3)	/* rgmii2_rd3 */
			0x1bc (PIN_INPUT | MUX_MODE3)	/* rgmii2_rd2 */
			0x1c0 (PIN_INPUT | MUX_MODE3)	/* rgmii2_rd1 */
			0x1c4 (PIN_INPUT | MUX_MODE3)	/* rgmii2_rd0 */
		>;

	};
	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 */
			0x250 (PIN_OFF_NONE)
			0x254 (PIN_OFF_NONE)
			0x258 (PIN_OFF_NONE)
			0x25c (PIN_OFF_NONE)
			0x260 (PIN_OFF_NONE)
			0x264 (PIN_OFF_NONE)
			0x268 (PIN_OFF_NONE)
			0x26c (PIN_OFF_NONE)
			0x270 (PIN_OFF_NONE)
			0x274 (PIN_OFF_NONE)
			0x278 (PIN_OFF_NONE)
			0x27c (PIN_OFF_NONE)

			/* Slave 1 */
			0x198 (PIN_OFF_NONE)
			0x19c (PIN_OFF_NONE)
			0x1a0 (PIN_OFF_NONE)
			0x1a4 (PIN_OFF_NONE)
			0x1a8 (PIN_OFF_NONE)
			0x1ac (PIN_OFF_NONE)
			0x1b0 (PIN_OFF_NONE)
			0x1b4 (PIN_OFF_NONE)
			0x1b8 (PIN_OFF_NONE)
			0x1bc (PIN_OFF_NONE)
			0x1c0 (PIN_OFF_NONE)
			0x1c4 (PIN_OFF_NONE)
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			0x23c (PIN_OUTPUT_PULLUP | MUX_MODE0)	/* mdio_data */
			0x240 (PIN_INPUT_PULLUP | MUX_MODE0)	/* mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			0x23c (PIN_OFF_NONE)
			0x240 (PIN_OFF_NONE)
		>;
	};

	nand_flash_x16: nand_flash_x16 {
		/* On DRA7 EVM, GPMC_WPN and NAND_BOOTn comes from DIP switch
		 * So NAND flash requires following switch settings:
		 * SW5.9 (GPMC_WPN) = LOW
		 * SW5.1 (NAND_BOOTn) = HIGH */
		pinctrl-single,pins = <
			0x0 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad0	*/
			0x4 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad1	*/
			0x8 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad2	*/
			0xc 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad3	*/
			0x10 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad4	*/
			0x14 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad5	*/
			0x18 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad6	*/
			0x1c 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad7	*/
			0x20 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad8	*/
			0x24 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad9	*/
			0x28 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad10	*/
			0x2c 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad11	*/
			0x30 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad12	*/
			0x34 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad13	*/
			0x38 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad14	*/
			0x3c 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_ad15	*/
			0xD8 	0x70000 /* (PIN_INPUT | MUX_MODE0)	gpmc_wait0	*/
			0xCC 	0x0 	/* (PIN_OUTPUT	   | MUX_MODE0)	gpmc_wen	*/
			0xB4 	0x0	/* (PIN_OUTPUT | MUX_MODE0)	gpmc_csn0	*/
			0xC4 	0x0	/* (PIN_OUTPUT 	   | MUX_MODE0)	gpmc_advn_ale */
			0xC8 	0x0	/* (PIN_OUTPUT	   | MUX_MODE0)	gpmc_oen_ren	 */
			0xD0 	0x0	/* (PIN_OUTPUT 	   | MUX_MODE0)	gpmc_be0n_cle */
		>;
	};

	mcasp3_pins: pinmux_mcasp3_pins {
		pinctrl-single,pins = <
			0x324 0x10180	/* mcasp3_aclkx.mcasp3_aclkx	Mode0.Output.PD */
			0x328 0x10180	/* mcasp3_fsx.mcasp3_fsx	Mode0.Output.PD */
			0x32c 0x10180	/* mcasp3_axr0.mcasp3_axr0	Mode0.Output.PD */
			0x330 0x50160	/* mcasp3_axr1.mcasp3_axr1	Mode0.Input.PD */
		>;
	};

	mcasp6_pins: pinmux_mcasp6_pins {
		pinctrl-single,pins = <
			0x2d4 0x001a1	/* mcasp1_axr8.mcasp6_axr0	Mode1.Output.PD */
			0x2d8 0x401a1	/* mcasp1_axr9.mcasp6_axr1	Mode1.Input.PD */
			0x2dc 0x001a1	/* mcasp1_axr10.mcasp6_clkx	Mode1.Output.PD */
			0x2e0 0x001a1	/* mcasp1_axr11.mcasp6_fsx	Mode1.Output.PD */
		>;
	};

	mcasp3_sleep_pins: pinmux_mcasp3_sleep_pins {
		pinctrl-single,pins = <
			0x324 (PIN_OFF_NONE)
			0x328 (PIN_OFF_NONE)
			0x32c (PIN_OFF_NONE)
			0x330 (PIN_OFF_NONE)
		>;
	};

	hpd_pin: pinmux_hpd_pin {
		pinctrl-single,pins = <
			0x3b8	0x5000e	/* gpio7_12 INPUT | MODE14 */
		>;
	};

	radio_pins: pinmux_radio_pins {
		pinctrl-single,pins = <
			0x02F4	 0x40000 /* MCASP2_ACLKX: Mode0.Input.PD */
			0x02F8	 0xc0000 /* MCASP2_AFSX: Mode0.Input.PD */
			0x0304	 0x40000 /* MCASP2_AXR0: Mode0.Input.PD */
			0x0308	 0x40000 /* MCASP2_AXR1: Mode0.Input.PD */
			0x030C	 0xc0000 /* MCASP2_AXR2: Mode0.Input.PD */
			0x0310	 0xc0000 /* MCASP2_AXR3: Mode0.Input.PD */
			0x0314	 0x40000 /* MCASP2_AXR4: Mode0.Input.PD */
			0x0318	 0x40000 /* MCASP2_AXR5: Mode0.Input.PD */
			0x031c	 0x40000 /* MCASP2_AXR6: Mode0.Input.PD */
			0x0320	 0x40000 /* MCASP2_AXR7: Mode0.Input.PD */
			0x02A0	 0x5000e /* GPIO6_20: Mode15.Input.PD */
		>;
	};

       wl_pins: pinmux_wl_pins {
               pinctrl-single,pins = <
                       0x3e8 0x60003   /* MMC4_CLK: INPUTENABLE | PULLUP | MODE3 */
                       0x3ec 0x60003   /* MMC4_CMD: INPUTENABLE | PULLUP | MODE3 */
                       0x3f0 0x60003   /* MMC4_DAT0: INPUTENABLE | PULLUP | MODE3 */
                       0x3f4 0x60003   /* MMC4_DAT1: INPUTENABLE | PULLUP | MODE3 */
                       0x3f8 0x60003   /* MMC4_DAT2: INPUTENABLE | PULLUP | MODE3 */
                       0x3fc 0x60003   /* MMC4_DAT3: INPUTENABLE | PULLUP | MODE3 */
                       0x2cc 0x2000E   /* WLAN_EN: OUTPUT | MODE14 */
               >;
       };

       wlirq_pins: pinmux_wlirq_pins {
               pinctrl-single,pins = <
                       0x2c8 0x106000E /* WLAN_IRQ: INPUT | WAKEUP_ENABLE | MODE 14 */
               >;
       };

};

&i2c1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	clock-frequency = <400000>;

	tps659038: tps659038@58 {
		compatible = "ti,tps659038";
		reg = <0x58>;

		tps659038_pmic {
			compatible = "ti,tps659038-pmic";

			regulators {
				smps123_reg: smps123 {
					/* VDD_MPU */
						regulator-name = "smps123";
						regulator-min-microvolt = < 850000>;
						regulator-max-microvolt = <1280000>;
						regulator-always-on;
						regulator-boot-on;
					};

				smps45_reg: smps45 {
						/* VDD_DSPEVE */
						regulator-name = "smps45";
						regulator-min-microvolt = < 850000>;
						regulator-max-microvolt = <1150000>;
						regulator-boot-on;
					};

				smps6_reg: smps6 {
						/* VDD_GPU - over VDD_SMPS6 */
						regulator-name = "smps6";
						regulator-min-microvolt = <850000>;
						regulator-max-microvolt = <12500000>;
						regulator-boot-on;
					};

				smps7_reg: smps7 {
						/* CORE_VDD */
						regulator-name = "smps7";
						regulator-min-microvolt = <850000>;
						regulator-max-microvolt = <1060000>;
						regulator-always-on;
						regulator-boot-on;
					};

				smps8_reg: smps8 {
						/* VDD_IVAHD */
						regulator-name = "smps8";
						regulator-min-microvolt = < 850000>;
						regulator-max-microvolt = <1250000>;
						regulator-boot-on;
					};

				smps9_reg: smps9 {
						/* VDDS1V8 */
						regulator-name = "smps9";
						regulator-min-microvolt = <1800000>;
						regulator-max-microvolt = <1800000>;
						regulator-always-on;
						regulator-boot-on;
					};

				ldo1_reg: ldo1 {
						/* LDO1_OUT --> SDIO  */
						regulator-name = "ldo1";
						regulator-min-microvolt = <1800000>;
						regulator-max-microvolt = <3300000>;
						regulator-always-on;
						regulator-boot-on;
					};

				ldo2_reg: ldo2 {
						/* VDD_RTCIO */
						/* LDO2 -> VDDSHV5, LDO2 also goes to CAN_PHY_3V3 */
						regulator-name = "ldo2";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
						regulator-boot-on;
					};

				ldo3_reg: ldo3 {
						/* VDDA_1V8_PHY */
						regulator-name = "ldo3";
						regulator-min-microvolt = <2000000>;
						regulator-max-microvolt = <2000000>;
						regulator-boot-on;
						regulator-always-on;
					};

				ldo9_reg: ldo9 {
						/* VDD_RTC */
						regulator-name = "ldo9";
						regulator-min-microvolt = <1050000>;
						regulator-max-microvolt = <1050000>;
						regulator-boot-on;
					};

				ldoln_reg: ldoln {
						/* VDDA_1V8_PLL */
						regulator-name = "ldoln";
						regulator-min-microvolt = <1800000>;
						regulator-max-microvolt = <1800000>;
						regulator-always-on;
						regulator-boot-on;
					};

				ldousb_reg: ldousb {
						/* VDDA_3V_USB: VDDA_USBHS33 */
						regulator-name = "ldousb";
						regulator-min-microvolt = <3300000>;
						regulator-max-microvolt = <3300000>;
						regulator-boot-on;
					};

				};
			};
		};

	pcf_gpio_20: gpio@20 {
		compatible = "ti,pcf8575";
		reg = <0x20>;
		lines-initial-states = <0x4000>;
		gpio-controller;
		#gpio-cells = <2>;
		interrupt-parent = <&gpio6>;
		interrupts = <11 2>;
		interrupt-controller;
		#interrupt-cells = <2>;
	};

	gpio21: gpio@21 {
		compatible = "ti,pcf8575";
		reg = <0x21>;
		lines-initial-states = <0x1408>;
		gpio-controller;
		#gpio-cells = <2>;
		interrupt-parent = <&pcf_gpio_20>;
		interrupts = <14 2>;
		interrupt-controller;
		#interrupt-cells = <2>;
	};

	/* TLC chip for LCD panel power and backlight */
	tlc59108: tlc59108@40 {
		compatible = "ti,tlc59108";
		reg = <0x40>;
		gpios = <&pcf_gpio_20 13 0>; /* P15, CON_LCD_PWR_DN */
		video-source = <&dpi1>;
		data-lines = <24>;
	};

	mxt244: touchscreen@4a {
		compatible = "atmel,mXT244";
		status = "okay";
		reg = <0x4a>;
		interrupts = <0 119 0x4>;

		atmel,config = <
			/* MXT244_GEN_COMMAND(6) */
			0x00 0x00 0x00 0x00 0x00 0x00
			/* MXT244_GEN_POWER(7) */
			0x20 0xff 0x32
			/* MXT244_GEN_ACQUIRE(8) */
			0x0a 0x00 0x05 0x00 0x00 0x00 0x09 0x23
			/* MXT244_TOUCH_MULTI(9) */
			0x00 0x00 0x00 0x13 0x0b 0x00 0x00 0x00 0x02 0x00
			0x00 0x01 0x01 0x0e 0x0a 0x0a 0x0a 0x0a 0x00 0x00
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			0x00
			/* MXT244_TOUCH_KEYARRAY(15) */
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			0x00
			/* MXT244_COMMSCONFIG_T18(2) */
			0x00 0x00
			/* MXT244_SPT_GPIOPWM(19) */
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			0x00 0x00 0x00 0x00 0x00 0x00
			/* MXT244_PROCI_GRIPFACE(20) */
			0x07 0x00 0x00 0x00 0x00 0x00 0x00 0x50 0x28 0x04
			0x0f 0x0a
			/* MXT244_PROCG_NOISE(22) */
			0x05 0x00 0x00 0x00 0x00 0x00 0x00 0x03 0x23 0x00
			0x00 0x05 0x0f 0x19 0x23 0x2d 0x03
			/* MXT244_TOUCH_PROXIMITY(23) */
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			0x00 0x00 0x00 0x00 0x00
			/* MXT244_PROCI_ONETOUCH(24) */
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			/* MXT244_SPT_SELFTEST(25) */
			0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
			0x00 0x00 0x00 0x00
			/* MXT244_PROCI_TWOTOUCH(27) */
			0x00 0x00 0x00 0x00 0x00 0x00 0x00
			/* MXT244_SPT_CTECONFIG(28) */
			0x00 0x00 0x02 0x08 0x10 0x00
		>;

		atmel,x_line = <18>;
		atmel,y_line = <12>;
		atmel,x_size = <800>;
		atmel,y_size = <480>;
		atmel,blen = <0x01>;
		atmel,threshold = <30>;
		atmel,voltage = <2800000>;
		atmel,orient = <0x4>;
	};

	tlv320aic3106: tlv320aic3106@18 {
		compatible = "ti,tlv320aic3106";
		reg = <0x18>;
		adc-settle-ms = <40>;
		status = "okay";

		/* Regulators */
		AVDD-supply = <&evm_3v3_sw>;
		IOVDD-supply = <&evm_3v3_sw>;
		DRVDD-supply = <&evm_3v3_sw>;
		DVDD-supply = <&aic_dvdd_1v8>;
	};
};

&i2c2 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;
	clock-frequency = <400000>;

	pcf_hdmi: gpio@26 {
		compatible = "nxp,pcf8575";
		reg = <0x26>;
		lines-initial-states = <0xffeb>;
		gpio-controller;
		#gpio-cells = <2>;
	};

	camera_ov10633: camera_ov10633 {
		compatible = "ti,camera-ov10633";
		gpios = <&pcf_hdmi 2 0>,	/* VIN2_S0 */
			<&pcf_hdmi 3 0>,	/* CAM_FPD_MUX_S0 */
			<&gpio4 13 0>,		/* MUX1_SEL0 */
			<&gpio4 14 0>,		/* MUX1_SEL1 */
			<&gpio4 15 0>,		/* MUX2_SEL0 */
			<&gpio4 16 0>,		/* MUX2_SEL1 */
			<&gpio6 17 0>,		/* OV_PWDN */
			<&gpio2 29 0>,		/* DEMUX_FPD_A */
			<&gpio1 4 0>,		/* DEMUX_FPD_B */
			<&gpio6 7 0>;		/* DEMUX_FPD_C */
		ovnode = <&i2c2>;
	};

	camera_tvp5158: camera_tvp5158 {
		compatible = "ti,tvp5158";
		reg = <0x58>;
		gpios = <&pcf_hdmi 3 0>,
		       <&gpio21 8 0>;
		port {
			tvp5158: endpoint {
			// No props incase of BT656
			};
		};
       };

	camera_ov10635: camera_ov10635 {
		compatible = "ti,camera-ov10635";
		gpios = <&pcf_hdmi 2 0>,	/* VIN2_S0 */
			<&pcf_hdmi 3 0>,	/* CAM_FPD_MUX_S0 */
			<&gpio4 13 0>,		/* MUX1_SEL0 */
			<&gpio4 14 0>,		/* MUX1_SEL1 */
			<&gpio4 15 0>,		/* MUX2_SEL0 */
			<&gpio4 16 0>,		/* MUX2_SEL1 */
			<&gpio6 17 0>,		/* OV_PWDN */
			<&gpio2 29 0>,		/* DEMUX_FPD_A */
			<&gpio1 4 0>,		/* DEMUX_FPD_B */
			<&gpio6 7 0>;		/* DEMUX_FPD_C */
		ovnode = <&i2c2>;
	};

	fpdlink_camera {
		compatible = "ti,fpdlink";
		reg = <0x20>;
		gpios =	<&pcf_hdmi 3 0>,
			<&gpio21 8 0>;
		port {
			cam_fpdlink: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
				bus-width = <24>;
			};
		};
       };

	ov10633@37 {
		compatible = "omnivision,ov10633";
		reg = <0x37>;

		port {
			onboardLI: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <1>;
			};
		};
	};

        ov10635@30 {
		compatible = "omnivision,ov10635";
		reg = <0x30>;

		port {
			ovcam: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <1>;
			};
		};
	};

        ov10635@38 {
		compatible = "omnivision,ov10635";
		reg = <0x38>;
		deserializer = <&lvds_des1>;
		serializer = <&lvds_ser1>;

		port {
			cam1: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};

	ov10635@39 {
		compatible = "omnivision,ov10635";
		reg = <0x39>;
		deserializer = <&lvds_des2>;
		serializer = <&lvds_ser2>;

		port {
			cam2: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};

	ov10635@3a {
		compatible = "omnivision,ov10635";
		reg = <0x3a>;
		deserializer = <&lvds_des3>;
		serializer = <&lvds_ser3>;

		port {
			cam3: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};

	ov10635@3b {
		compatible = "omnivision,ov10635";
		reg = <0x3b>;
		deserializer = <&lvds_des4>;
		serializer = <&lvds_ser4>;

		port {
			cam4: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};

	ov10635@3c {
		compatible = "omnivision,ov10635";
		reg = <0x3c>;
		deserializer = <&lvds_des5>;
		serializer = <&lvds_ser5>;

		port {
			cam5: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};

	ov10635@3d {
		compatible = "omnivision,ov10635";
		reg = <0x3d>;
		deserializer = <&lvds_des6>;
		serializer = <&lvds_ser6>;

		port {
			cam6: endpoint {
				hsync-active = <1>;
				vsync-active = <1>;
				pclk-sample = <0>;
			};
		};
	};

	/*
	 * This is a HDMI reciever which conflicts with the I2C addresses
	 * of I/O expanders. It needs to be configured to use some other
	 * address.
	 */
	hdmirec: hdmirec@31 {
		compatible = "no,one";
		reg=<0x31>;
	};

	/*
	 * These are I/O expanders which drive some signals of the deserializer
	 * Each 16bit I/O expander drives two deserializers
	 * The mapping of I/O expanders and deserializer is as follows:-
	 * I/O Expander	| Deserializer
	 * -------------+----------------
	 * Exp1(0x27)	| lvds_des1(0x60)
	 * Exp1(0x27)	| lvds_des2(0x64)
	 * Exp1(0x21)	| lvds_des3(0x68)
	 * Exp1(0x21)	| lvds_des4(0x6c)
	 * Exp1(0x25)	| lvds_des5(0x61)
	 * Exp1(0x25)	| lvds_des6(0x69)
	 */
	expander@27 {
		compatible = "ti,i2cexp";
		reg=<0x27>;
		hdmirec = <&hdmirec>;
	};

	expander@21 {
		compatible = "ti,i2cexp";
		reg=<0x21>;
		hdmirec = <&hdmirec>;
	};

	expander@25 {
		compatible = "ti,i2cexp";
		reg=<0x25>;
		hdmirec = <&hdmirec>;
	};

	lvds_des1: ds90ub914aq@60 {
		compatible = "ti,ds90ub914aq";
		reg = <0x60>;
	};

	lvds_ser1: ds90ub913aq@74 {
		compatible = "ti,ds90ub913aq";
		reg = <0x74>;
	};

	lvds_des2: ds90ub914aq@64 {
		compatible = "ti,ds90ub914aq";
		reg = <0x64>;
	};

	lvds_ser2: ds90ub913aq@75 {
		compatible = "ti,ds90ub913aq";
		reg = <0x75>;
	};

	lvds_des3: ds90ub914aq@68 {
		compatible = "ti,ds90ub914aq";
		reg = <0x68>;
	};

	lvds_ser3: ds90ub913aq@76 {
		compatible = "ti,ds90ub913aq";
		reg = <0x76>;
	};

	lvds_des4: ds90ub914aq@6c {
		compatible = "ti,ds90ub914aq";
		reg = <0x6c>;
	};

	lvds_ser4: ds90ub913aq@77 {
		compatible = "ti,ds90ub913aq";
		reg = <0x77>;
	};

	lvds_des5: ds90ub914aq@61 {
		compatible = "ti,ds90ub914aq";
		reg = <0x61>;
	};

	lvds_ser5: ds90ub913aq@78 {
		compatible = "ti,ds90ub913aq";
		reg = <0x78>;
	};

	lvds_des6: ds90ub914aq@69 {
		compatible = "ti,ds90ub914aq";
		reg = <0x69>;
	};

	lvds_ser6: ds90ub913aq@79 {
		compatible = "ti,ds90ub913aq";
		reg = <0x79>;
	};
};

&i2c3 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c3_pins>;
	clock-frequency = <3400000>;
};

&i2c4 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c4_pins>;
	clock-frequency = <400000>;
};

&mcspi1 {
        status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mcspi1_pins>;
};

&mcspi2 {
        status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mcspi2_pins>;
};

&uart1 {
	status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&uart1_pins>;
};

&uart3 {
        status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&bt_uart3_pins>;
};

&qspi {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&qspi1_pins>;

	spi-max-frequency = <48000000>;
	m25p80@0 {
		compatible = "s25fl256s1";
		spi-max-frequency = <48000000>;
		reg = <0>;
		spi-tx-bus-width = <1>;
		spi-rx-bus-width = <4>;
		spi-cpol;
		spi-cpha;
		#address-cells = <1>;
		#size-cells = <1>;
	};
};

&usb1 {
	dr_mode = "host";
	pinctrl-names = "default";
	pinctrl-0 = <&usb1_pins>;
	gpios = <&gpio6 12 0>;
};

&usb2 {
	dr_mode = "otg";
	pinctrl-names = "default";
	pinctrl-0 = <&usb2_pins>;
	gpios = <&gpio6 13 0>;
};

&dwc3_1 {
	extcon = <&extcon1>;
};

&dwc3_2 {
	extcon = <&extcon2>;
};

&mmc1 {
	status = "okay";
	vmmc-supply = <&evm_3v3_sd>;
	vmmc_aux-supply = <&ldo1_reg>;
	pbias-supply = <&pbias_regulator>;
	bus-width = <4>;
	pinctrl-names = "default", "muxpu", "muxpd";
	pinctrl-0 = <&mmc1_pins>;
	pinctrl-1 = <&mmc1_muxpu>;
	pinctrl-2 = <&mmc1_muxpd>;
	cd-gpios = <&gpio6 27 0>; /* gpio 187 */
};

&mmc2 {
	status = "okay";
	vmmc-supply = <&evm_3v3_sw>;
	bus-width = <8>;
	ti,non-removable;
	cap-mmc-dual-data-rate;
};

&mmc4 {
       status = "okay";
       vmmc-supply = <&vmmcwl_fixed>;
       bus-width = <4>;
       cap-power-off-card;
       keep-power-in-suspend;
       ti,non-removable;
};

&vip1 {
	pinctrl-names = "default";
	/*
		Pinmux conflict between 1a:16-23 & 2a:0-8
		Either use full 32bit of vin1a or use 16bit vin1a and 8bitvin2a
		TO enable RGB camera, uncomment this
		pinctrl-0 = <&vin1a_pins &vin1a_d16_d23_pins>;
	*/
	pinctrl-0 = <&vin1a_pins &vin1a_d16_d23_pins>;
};

&vip2 {
	pinctrl-names = "default";
	pinctrl-0 = <&vin3a_pins>;
};

&vip3 {
	pinctrl-names = "default";
	//pinctrl-0 = <&vin5a_pins &vin6a_pins>;
	pinctrl-0 = <&vin5a_pins>;
};

&vin1a {
	endpoint@2 {
		slave-mode;
		remote-endpoint = <&cam1>;
	};
	endpoint@4 {
		slave-mode;
		remote-endpoint = <&cam_fpdlink>;
	};
	endpoint@0 {
		slave-mode;
		remote-endpoint = <&onboardLI>;
	};
	endpoint@1 {
		slave-mode;
		remote-endpoint = <&ovcam>;
	};
	endpoint@3 {
		slave-mode;
		remote-endpoint = <&tvp5158>;
	};
};

&vin2a {
	endpoint@0 {
		slave-mode;
		remote-endpoint = <&cam2>;
	};
};

&vin3a {
	endpoint@0 {
		slave-mode;
		remote-endpoint = <&cam3>;
	};
};

&vin5a {
	endpoint@0 {
		slave-mode;
		remote-endpoint = <&cam4>;
	};
};

&vin6a {
	endpoint@0 {
		slave-mode;
		remote-endpoint = <&cam6>;
	};
};

&dss {
	vdda_video-supply = <&ldoln_reg>;
};

&hdmi {
	vdda_hdmi_dac-supply = <&ldo3_reg>;
};

&avs_mpu {
	avs-supply = <&smps123_reg>;
	/* Account for Palmas accuracy not < 10mV */
	voltage-tolerance = <1>;
};

&avs_core {
	avs-supply = <&smps7_reg>;
	/* Account for Palmas accuracy not < 10mV */
	voltage-tolerance = <1>;
};

&avs_gpu {
	avs-supply = <&smps6_reg>;
	/* Account for Palmas accuracy not < 10mV */
	voltage-tolerance = <1>;
};

&avs_dspeve {
	avs-supply = <&smps45_reg>;
	/* Account for Palmas accuracy not < 10mV */
	voltage-tolerance = <1>;
};

&avs_iva {
	avs-supply = <&smps8_reg>;
	/* Account for Palmas accuracy not < 10mV */
	voltage-tolerance = <1>;
};

&cpu0 {
	cpu0-supply = <&abb_mpu>;
};

/ {
	aliases {
		display0 = &tlc59108;
		display1 = &hdmi0;
	};

	tpd12s015: encoder@0 {
		compatible = "ti,draevm-tpd12s015";

		video-source = <&hdmi>;

		gpios = <&pcf_hdmi 4 0>,	/* P4, CT CP HPD */
			<&pcf_hdmi 5 0>,	/* P5, LS OE */
			<&gpio7 12 0>;		/* gpio7_12/sp1_cs2, HPD */
	};

	hdmi0: connector@0 {
		compatible = "ti,hdmi_connector";

		video-source = <&tpd12s015>;
	};
};

&mac {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	dual_emac;
};

&cpsw_emac0 {
	phy_id = <&davinci_mdio>, <2>;
};

&cpsw_emac1 {
	phy_id = <&davinci_mdio>, <3>;
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
};

&elm {
	status = "okay";
};

&gpmc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&nand_flash_x16>;
	ranges = <0 0 0x08000000 0x10000000>;
	nand@0,0 {
		reg = <0 0 0>;
		nand-bus-width = <16>;
		gpmc,device-width = <2>;
		gpmc,sync-clk-ps = <0>;
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <40>;
		gpmc,cs-wr-off-ns = <40>;
		gpmc,adv-on-ns = <0>;
		gpmc,adv-rd-off-ns = <30>;
		gpmc,adv-wr-off-ns = <30>;
		gpmc,we-on-ns = <5>;
		gpmc,we-off-ns = <25>;
		gpmc,oe-on-ns = <2>;
		gpmc,oe-off-ns = <20>;
		gpmc,access-ns = <20>;
		gpmc,wr-access-ns = <40>;
		gpmc,rd-cycle-ns = <40>;
		gpmc,wr-cycle-ns = <40>;
		gpmc,wait-on-read = "true";
		gpmc,wait-on-write = "true";
		gpmc,bus-turnaround-ns = <0>;
		gpmc,cycle2cycle-delay-ns = <0>;
		gpmc,clk-activation-ns = <0>;
		gpmc,wait-monitoring-ns = <0>;
		gpmc,wr-data-mux-bus-ns = <0>;
		ti,nand-ecc-opt = "bch8";
		ti,elm-id = <&elm>;
		/* MTD partition table */
		/* All SPL-* partitions are sized to minimal length
		 * which can be independently programmable. For
		 * NAND flash this is equal to size of erase-block */
		#address-cells = <1>;
		#size-cells = <1>;
		partition@0 {
			label = "NAND.SPL";
			reg = <0x00000000 0x000020000>;
		};
		partition@1 {
			label = "NAND.SPL.backup1";
			reg = <0x00020000 0x00020000>;
		};
		partition@2 {
			label = "NAND.SPL.backup2";
			reg = <0x00040000 0x00020000>;
		};
		partition@3 {
			label = "NAND.SPL.backup3";
			reg = <0x00060000 0x00020000>;
		};
		partition@4 {
			label = "NAND.u-boot-spl-os";
			reg = <0x00080000 0x00040000>;
		};
		partition@5 {
			label = "NAND.u-boot";
			reg = <0x000C0000 0x00100000>;
		};
		partition@6 {
			label = "NAND.u-boot-env";
			reg = <0x001C0000 0x00020000>;
		};
		partition@7 {
			label = "NAND.u-boot-env.backup1";
			reg = <0x001E0000 0x00020000>;
		};
		partition@8 {
			label = "NAND.kernel";
			reg = <0x00200000 0x00800000>;
		};
		partition@9 {
			label = "NAND.file-system";
			reg = <0x00A00000 0x0F600000>;
		};
	};
};

&atl {
	status = "okay";

	atl1 {
		bws = <DRA7_ATL_WS_MCASP2_FSX>;
		aws = <DRA7_ATL_WS_MCASP3_FSX>;
	};

	atl2 {
		bws = <DRA7_ATL_WS_MCASP2_FSX>;
		aws = <DRA7_ATL_WS_MCASP3_FSX>;
	};
};

&mcasp3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mcasp3_pins>;
	pinctrl-1 = <&mcasp3_sleep_pins>;

	fck_parent = "atl_clkin2_ck";

	status = "okay";

	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	/* 16 serializer */
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		1 2 0 0
		0 0 0 0
		0 0 0 0
		0 0 0 0
	>;

	ti,tx-inactive-mode = <2>; /* 0: Hi_Z, 2: Low, 3: High */
	ti,rx-inactive-mode = <2>; /* 0: Hi_Z, 2: Low, 3: High */
};
